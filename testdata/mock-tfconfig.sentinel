import "strings"
import "types"

_modules = {
	"root": {
		"data": {},
		"modules": {
			"apache-Guy": {
				"config": {},
				"references": {
					"instance_type": [
						"var.instance_type",
					],
					"my_id_with_cidr": [
						"var.my_id_with_cidr",
					],
					"public_key": [
						"var.public_key",
					],
					"server_name": [
						"var.server_name",
					],
					"vpc_id": [
						"var.vpc_id",
					],
				},
				"source":  "RillistikPete/moduleApache/aws",
				"version": "1.0.0",
			},
		},
		"outputs": {
			"public_ip": {
				"depends_on":  [],
				"description": "",
				"references": [
					"module.apache-Guy.public_ip",
					"module.apache-Guy",
				],
				"sensitive": false,
				"value":     undefined,
			},
		},
		"providers": {
			"aws": {
				"alias": {
					"": {
						"config": {
							"region": "us-east-1",
						},
						"references": {
							"region": [],
						},
						"version": "",
					},
				},
				"config": {
					"region": "us-east-1",
				},
				"references": {
					"region": [],
				},
				"version": "",
			},
		},
		"resources": {
			"aws_s3_bucket": {
				"buckit": {
					"config": {
						"bucket": null,
					},
					"provisioners": null,
					"references": {
						"bucket": [],
					},
				},
			},
		},
		"variables": {
			"buckit": {
				"default":     "7573333333333",
				"description": "",
			},
			"instance_type": {
				"default":     "t2.micro",
				"description": "",
			},
			"my_id_with_cidr": {
				"default":     null,
				"description": "Provide your IP here 199.231.199.21 not 136.56.71.63/32",
			},
			"public_key": {
				"default":     null,
				"description": "",
			},
			"server_name": {
				"default":     "Apache pk Server",
				"description": "",
			},
			"vpc_id": {
				"default":     null,
				"description": "",
			},
		},
	},

	"module.apache-Guy": {
		"data": {
			"aws_vpc": {
				"pkVpc": {
					"config":       {},
					"provisioners": null,
					"references": {
						"id": [
							"var.vpc_id",
						],
					},
				},
			},
			"template_file": {
				"user_data": {
					"config":       {},
					"provisioners": null,
					"references": {
						"template": [
							"path.module",
						],
					},
				},
			},
		},
		"modules": {},
		"outputs": {
			"public_ip": {
				"depends_on":  [],
				"description": "",
				"references": [
					"aws_instance.apacheInstance.public_ip",
					"aws_instance.apacheInstance",
				],
				"sensitive": false,
				"value":     undefined,
			},
		},
		"providers": {
			"template": {
				"alias": {
					"": {
						"config":     {},
						"references": {},
						"version":    "",
					},
				},
				"config":     {},
				"references": {},
				"version":    "",
			},
		},
		"resources": {
			"aws_instance": {
				"apacheInstance": {
					"config": {
						"ami": "ami-0889a44b331db0194",
					},
					"provisioners": null,
					"references": {
						"ami": [],
						"instance_type": [
							"var.instance_type",
						],
						"key_name": [
							"aws_key_pair.deployerApache.key_name",
							"aws_key_pair.deployerApache",
						],
						"tags": [
							"var.server_name",
						],
						"user_data": [
							"data.template_file.user_data.rendered",
							"data.template_file.user_data",
						],
						"vpc_security_group_ids": [
							"aws_security_group.apacheMod-SG.id",
							"aws_security_group.apacheMod-SG",
						],
					},
				},
			},
			"aws_key_pair": {
				"deployerApache": {
					"config": {
						"key_name":   "deployer-key-apache",
						"public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDAxSNXQ7O+l+LicSK4t96vg0rE0qgOJXl91AD6ZRVGVLev1sQMP9ZNcHL97h6q5OfCTPoK9+FGex+h7m/rUrkjxOm8C9VKH0WDzNg+Apnh0ZS9FxwpMNEHord526vX8YDlvl2teWL0Rkc4XuFX2z1o0WLs+042lOzmGeDXjIS62YcmFAhKfrGm/zukAHH0XjU8Xv4Ew73r6NKFXG2rhj00gjqh4VAc/CR16TlQOr0mDPX29e8UI1b35mtzxJf0korE0iEQBj1aarDfMu5v4tWkQA87nt7RzBkPcUGl36vXesu+P1eSENGf9XLFiXlBWquInc+2SPr3D/NLBrhGEsZ1 rsa-key-20230516",
					},
					"provisioners": null,
					"references": {
						"key_name":   [],
						"public_key": [],
					},
				},
			},
			"aws_security_group": {
				"apacheMod-SG": {
					"config": {
						"description": "Apache Kucas Server Security Group flex",
						"egress": [
							{
								"cidr_blocks": [
									"0.0.0.0/0",
								],
								"description": null,
								"from_port":   0,
								"ipv6_cidr_blocks": [
									"::/0",
								],
								"prefix_list_ids": null,
								"protocol":        "-1",
								"security_groups": null,
								"self":            null,
								"to_port":         0,
							},
						],
						"name": "apacheMod-SG",
						"tags": {
							"Name": "PK_Sec_Group",
						},
					},
					"provisioners": null,
					"references": {
						"description": [],
						"egress":      [],
						"ingress": [
							"var.my_id_with_cidr",
						],
						"name": [],
						"tags": [],
						"vpc_id": [
							"data.aws_vpc.pkVpc.id",
							"data.aws_vpc.pkVpc",
						],
					},
				},
			},
		},
		"variables": {
			"instance_type": {
				"default":     "t2.micro",
				"description": "",
			},
			"my_id_with_cidr": {
				"default":     null,
				"description": "Provide your IP here 199.231.199.21 not 136.56.71.63/32",
			},
			"public_key": {
				"default":     null,
				"description": "",
			},
			"server_name": {
				"default":     "Apache pk Server",
				"description": "",
			},
			"vpc_id": {
				"default":     null,
				"description": "",
			},
		},
	},
}

module_paths = [
	[],
	[
		"apache-Guy",
	],
]

module = func(path) {
	if types.type_of(path) is not "list" {
		error("expected list, got", types.type_of(path))
	}

	if length(path) < 1 {
		return _modules.root
	}

	addr = []
	for path as p {
		append(addr, "module")
		append(addr, p)
	}

	return _modules[strings.join(addr, ".")]
}

data = _modules.root.data
modules = _modules.root.modules
providers = _modules.root.providers
resources = _modules.root.resources
variables = _modules.root.variables
outputs = _modules.root.outputs
